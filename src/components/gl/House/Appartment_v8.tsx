/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 appartment_v8.gltf -t -K -T 
Files: appartment_v8.gltf [31.48MB] >assets appartment_v8-transformed.glb [2.42MB] (92%)
*/

import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { type GLTF } from 'three-stdlib';
import { AppartmentHotspot } from './HotSpots/AppartmentHotspot';
import { AppartmentHotspotStats } from './HotSpots/AppartmentHotspotStats';

type GLTFResult = GLTF & {
  nodes: {
    render_map_brick: THREE.Mesh;
    bookshelf_2001: THREE.Mesh;
    wooden_floor3001: THREE.Mesh;
    bookshelf001: THREE.Mesh;
    sofa_3001: THREE.Mesh;
    sofa_2001: THREE.Mesh;
    closet_without_chair001: THREE.Mesh;
    closet_chair001: THREE.Mesh;
    plant_4001: THREE.Mesh;
    plant_3001: THREE.Mesh;
    plant_2001: THREE.Mesh;
    plant_1001: THREE.Mesh;
    bar001: THREE.Mesh;
    graffitti_gamejam: THREE.Mesh;
    graffitti_react: THREE.Mesh;
    plant_5001: THREE.Mesh;
    plant_2002: THREE.Mesh;
    stool_4001: THREE.Mesh;
    stool_3001: THREE.Mesh;
    stool_2001: THREE.Mesh;
    stool_1001: THREE.Mesh;
    boombox_large_2001: THREE.Mesh;
    Cube005: THREE.Mesh;
    gueridon001: THREE.Mesh;
    lamp_1001: THREE.Mesh;
    window006: THREE.Mesh;
    armchair001: THREE.Mesh;
    skyline: THREE.Mesh;
    ['38_black_and_white_marble_tile_texture-seamless']: THREE.Mesh;
    cheloupee: THREE.Mesh;
    sink: THREE.Mesh;
    hand_dryer: THREE.Mesh;
    ['241_victorian_cement_floor_tile_uni_colour_texture-seamless']: THREE.Mesh;
    ['16_clean_plaster_texture-seamless']: THREE.Mesh;
    light_2: THREE.Mesh;
    light_: THREE.Mesh;
    neon_2: THREE.Mesh;
    Cube003: THREE.Mesh;
    Cube014: THREE.Mesh;
    Cube030: THREE.Mesh;
    table_dining_3: THREE.Mesh;
    frame_1: THREE.Mesh;
    frame_4: THREE.Mesh;
    frame_2: THREE.Mesh;
    cyberpunk_4: THREE.Mesh;
    cyberpunk_3: THREE.Mesh;
    graffitti_party: THREE.Mesh;
    Cube012: THREE.Mesh;
    BOX_WITH_DJ: THREE.Mesh;
  };
  materials: {
    rustic_plaster: THREE.MeshStandardMaterial;
    bookshelf_2: THREE.MeshStandardMaterial;
    wooden_floor3: THREE.MeshStandardMaterial;
    bookshelf: THREE.MeshStandardMaterial;
    sofa_3: THREE.MeshStandardMaterial;
    sofa_2: THREE.MeshStandardMaterial;
    closet_without_chair: THREE.MeshStandardMaterial;
    closet_chair: THREE.MeshStandardMaterial;
    ['plant_4.001']: THREE.MeshStandardMaterial;
    ['plant_3.001']: THREE.MeshStandardMaterial;
    ['plant_2.001']: THREE.MeshStandardMaterial;
    ['plant_1.001']: THREE.MeshStandardMaterial;
    bar: THREE.MeshStandardMaterial;
    graffitti_gamejam: THREE.MeshStandardMaterial;
    graffitti_react: THREE.MeshStandardMaterial;
    plant_5: THREE.MeshStandardMaterial;
    plant_2: THREE.MeshStandardMaterial;
    stool_4: THREE.MeshStandardMaterial;
    stool_3: THREE.MeshStandardMaterial;
    stool_2: THREE.MeshStandardMaterial;
    stool_1: THREE.MeshStandardMaterial;
    boombox_large_2: THREE.MeshStandardMaterial;
    ['16_clean plaster texture-seamless']: THREE.MeshStandardMaterial;
    gueridon: THREE.MeshStandardMaterial;
    lamp_1: THREE.MeshStandardMaterial;
    window: THREE.MeshStandardMaterial;
    armchair: THREE.MeshStandardMaterial;
    skyline: THREE.MeshStandardMaterial;
    ['38_black and white marble tile texture-seamless']: THREE.MeshStandardMaterial;
    cheloupee: THREE.MeshStandardMaterial;
    sink: THREE.MeshStandardMaterial;
    hand_dryer: THREE.MeshStandardMaterial;
    ['241_victorian cement floor tile uni colour texture-seamless']: THREE.MeshStandardMaterial;
    ['16_clean plaster texture-seamless.002']: THREE.MeshStandardMaterial;
    light_2: THREE.MeshStandardMaterial;
    light_: THREE.MeshStandardMaterial;
    neon_2: THREE.MeshStandardMaterial;
    ['chalk.001']: THREE.MeshStandardMaterial;
    ['plaster.001']: THREE.MeshStandardMaterial;
    metal_beam: THREE.MeshStandardMaterial;
    table_dining_3: THREE.MeshStandardMaterial;
    frame_1: THREE.MeshStandardMaterial;
    frame_4: THREE.MeshStandardMaterial;
    frame_2: THREE.MeshStandardMaterial;
    cyberpunk_4: THREE.MeshStandardMaterial;
    cyberpunk_3: THREE.MeshStandardMaterial;
    graffitti_party: THREE.MeshStandardMaterial;
    wood_plinth: THREE.MeshStandardMaterial;
    BOX_WITH_DJ: THREE.MeshStandardMaterial;
  };
};

export const AppartmentV8 = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(
    'assets/appartment_v8-transformed.glb',
  ) as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <group>
        <mesh
          geometry={nodes.render_map_brick.geometry}
          material={materials.rustic_plaster}
        />
        <mesh
          geometry={nodes.bookshelf_2001.geometry}
          material={materials.bookshelf_2}
          position={[19.576, 3.487, -1.62]}
          scale={1.251}
        />
        <mesh
          geometry={nodes.wooden_floor3001.geometry}
          material={materials.wooden_floor3}
        >
          <meshLambertMaterial {...materials.wooden_floor3} />
        </mesh>
        <mesh
          geometry={nodes.bookshelf001.geometry}
          material={materials.bookshelf}
          position={[32.539, 5.079, -2.267]}
          scale={1.251}
        />
        <mesh
          geometry={nodes.sofa_3001.geometry}
          material={materials.sofa_3}
          position={[19.332, 0.349, 15.097]}
        />
        {/* <mesh
          geometry={nodes.sofa_2001.geometry}
          material={materials.sofa_2}
          position={[-16.512, 0.613, 4.434]}
          scale={1.182}
        /> */}
        <AppartmentHotspot
          type="sofa" //FIXME : add correct type, this is a placeholder for the sofa
          geometry={nodes.sofa_2001.geometry}
          materials={materials.sofa_2}
          position={[-16.512, 0.613, 4.434]}
          scale={1.182}
          stats={({ maxPersonsCount, personsCount }) => (
            <AppartmentHotspotStats
              maxPersonsCount={maxPersonsCount}
              personsCount={personsCount}
            />
          )}
        />
        <mesh
          geometry={nodes.closet_without_chair001.geometry}
          material={materials.closet_without_chair}
          position={[-0.572, 0, 0]}
        />
        <mesh
          geometry={nodes.closet_chair001.geometry}
          material={materials.closet_chair}
        />
        <mesh
          geometry={nodes.plant_4001.geometry}
          material={materials['plant_4.001']}
          position={[0.449, 0, -0.325]}
        />
        <mesh
          geometry={nodes.plant_3001.geometry}
          material={materials['plant_3.001']}
        />
        <mesh
          geometry={nodes.plant_2001.geometry}
          material={materials['plant_2.001']}
        />
        <mesh
          geometry={nodes.plant_1001.geometry}
          material={materials['plant_1.001']}
          position={[-0.063, 0, -3.28]}
        />
        {/* <mesh
          geometry={nodes.bar001.geometry}
          material={materials.bar}
          position={[7.986, 1.23, 6.416]}
        /> */}
        <AppartmentHotspot
          type="bar"
          geometry={nodes.bar001.geometry}
          materials={materials.bar}
          position={[7.986, 1.23, 6.416]}
          stats={({ maxPersonsCount, personsCount }) => (
            <AppartmentHotspotStats
              maxPersonsCount={maxPersonsCount}
              personsCount={personsCount}
            />
          )}
        />
        {/* <mesh
          geometry={nodes.graffitti_gamejam.geometry}
          material={materials.graffitti_gamejam}
        /> */}
        <mesh
          geometry={nodes.graffitti_gamejam.geometry}
          material={materials.graffitti_gamejam}
          material-toneMapped={false}
          material-emissive={0x800080}
          material-emissiveIntensity={20}
          material-emissiveMap={materials.graffitti_gamejam.map}
        />
        {/* <mesh
          geometry={nodes.graffitti_react.geometry}
          material={materials.graffitti_react}
        /> */}
        <mesh
          geometry={nodes.graffitti_react.geometry}
          material={materials.graffitti_react}
          material-toneMapped={false}
          material-emissive={0x800080}
          material-emissiveIntensity={20}
          material-emissiveMap={materials.graffitti_gamejam.map}
        />
        <mesh
          geometry={nodes.plant_5001.geometry}
          material={materials.plant_5}
        />
        <mesh
          geometry={nodes.plant_2002.geometry}
          material={materials.plant_2}
        />
        <mesh
          geometry={nodes.stool_4001.geometry}
          material={materials.stool_4}
        />
        <mesh
          geometry={nodes.stool_3001.geometry}
          material={materials.stool_3}
        />
        <mesh
          geometry={nodes.stool_2001.geometry}
          material={materials.stool_2}
        />
        <mesh
          geometry={nodes.stool_1001.geometry}
          material={materials.stool_1}
        />
        <mesh
          geometry={nodes.boombox_large_2001.geometry}
          material={materials.boombox_large_2}
        />
        <mesh
          geometry={nodes.Cube005.geometry}
          material={materials['16_clean plaster texture-seamless']}
        />
        <mesh
          geometry={nodes.gueridon001.geometry}
          material={materials.gueridon}
        />
        {/* <mesh
          geometry={nodes.lamp_1001.geometry}
          material={materials.lamp_1}
          position={[0.97, -0.242, 0]}
        /> */}
        <mesh
          geometry={nodes.lamp_1001.geometry}
          material={materials.lamp_1}
          position={[0.97, -0.242, 0]}
          material-toneMapped={false}
          material-emissive={0xfafa00}
          material-emissiveIntensity={6}
          material-emissiveMap={materials.lamp_1.map}
        />
        <mesh
          geometry={nodes.window006.geometry}
          material={materials.window}
          material-toneMapped={false}
          material-emissive={0x800080}
          material-emissiveIntensity={8}
          material-emissiveMap={materials.window.map}
        />
        <mesh
          geometry={nodes.armchair001.geometry}
          material={materials.armchair}
          position={[40.502, 0.293, 2.602]}
        />
        <mesh geometry={nodes.skyline.geometry} material={materials.skyline} />
        <mesh
          geometry={
            nodes['38_black_and_white_marble_tile_texture-seamless'].geometry
          }
          material={
            materials['38_black and white marble tile texture-seamless']
          }
          position={[-0.188, -0.367, 0]}
        />
        {/* <mesh
          geometry={nodes.cheloupee.geometry}
          material={materials.cheloupee}
          position={[54.192, 3.039, -2.056]}
          scale={1.155}
        /> */}
        <AppartmentHotspot
          geometry={nodes.cheloupee.geometry}
          materials={materials.cheloupee}
          position={[54.192, 3.039, -2.056]}
          scale={1.155}
          type="toilet"
          stats={({ maxPersonsCount, personsCount }) => (
            <AppartmentHotspotStats
              textPosition={[1, 3.5, 0]}
              maxPersonsCount={maxPersonsCount}
              personsCount={personsCount}
            />
          )}
        />
        <mesh
          geometry={nodes.sink.geometry}
          material={materials.sink}
          position={[0, -0.42, -1.23]}
        />
        <mesh
          geometry={nodes.hand_dryer.geometry}
          material={materials.hand_dryer}
          position={[0, 0, -1.69]}
        />
        <mesh
          geometry={
            nodes['241_victorian_cement_floor_tile_uni_colour_texture-seamless']
              .geometry
          }
          material={
            materials[
              '241_victorian cement floor tile uni colour texture-seamless'
            ]
          }
          position={[0, -0.522, 0.193]}
        />
        <mesh
          geometry={nodes['16_clean_plaster_texture-seamless'].geometry}
          material={materials['16_clean plaster texture-seamless.002']}
        />
        <mesh
          geometry={nodes.light_2.geometry}
          material={materials.light_2}
          material-toneMapped={false}
          material-emissive={0xfafa00}
          material-emissiveIntensity={1}
        />
        <mesh
          geometry={nodes.light_.geometry}
          material={materials.light_}
          material-toneMapped={false}
          material-emissive={0xfafa00}
          material-emissiveIntensity={1}
        />
        <mesh
          geometry={nodes.neon_2.geometry}
          material={materials.neon_2}
          material-toneMapped={false}
          material-emissive={0x800080}
          material-emissiveIntensity={20}
        />
        <mesh
          geometry={nodes.Cube003.geometry}
          material={materials['chalk.001']}
        />
        <mesh
          geometry={nodes.Cube014.geometry}
          material={materials['plaster.001']}
          position={[6.397, -0.818, -2.822]}
          rotation={[0, Math.PI / 2, 0]}
          scale={[0.088, 0.394, 6.638]}
        />
        <mesh
          geometry={nodes.Cube030.geometry}
          material={materials.metal_beam}
          position={[-23.221, 9.236, 15.079]}
          scale={[0.604, 11.172, 0.604]}
        />
        {/* <mesh
          geometry={nodes.table_dining_3.geometry}
          material={materials.table_dining_3}
        /> */}
        <AppartmentHotspot
          type="buffet"
          geometry={nodes.table_dining_3.geometry}
          materials={materials.table_dining_3}
          stats={({ maxPersonsCount, personsCount }) => (
            <AppartmentHotspotStats
              textPosition={[33.25, -1.5, 3]}
              maxPersonsCount={maxPersonsCount}
              personsCount={personsCount}
            />
          )}
        />
        <mesh
          geometry={nodes.frame_1.geometry}
          material={materials.frame_1}
          position={[13.301, 7.587, 3.226]}
          rotation={[1.802, 0, -Math.PI / 2]}
          scale={5.62}
        />
        <mesh
          geometry={nodes.frame_4.geometry}
          material={materials.frame_4}
          position={[43.975, 4.753, 5.853]}
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
          scale={3.386}
        />
        <mesh
          geometry={nodes.frame_2.geometry}
          material={materials.frame_2}
          position={[44.049, 7.508, 1.031]}
          rotation={[1.619, 0, Math.PI / 2]}
          scale={4.362}
        />
        <mesh
          geometry={nodes.cyberpunk_4.geometry}
          material={materials.cyberpunk_4}
          position={[-22.521, 9.057, 5.473]}
          rotation={[1.698, 0, -Math.PI / 2]}
          scale={5.844}
        />
        <mesh
          geometry={nodes.cyberpunk_3.geometry}
          material={materials.cyberpunk_3}
          position={[-22.558, 5.283, 0.631]}
          rotation={[1.559, 0, -Math.PI / 2]}
          scale={4.986}
        />
        <mesh
          geometry={nodes.graffitti_party.geometry}
          material={materials.graffitti_party}
          position={[-13.845, 8.547, -2.634]}
          rotation={[-Math.PI / 2, -0.146, -Math.PI]}
          scale={-6.044}
          material-toneMapped={false}
          material-emissive={0x800080}
          material-emissiveIntensity={20}
          material-map={materials.graffitti_party.map}
          material-emissiveMap={materials.graffitti_party.map}
        />
        <mesh
          geometry={nodes.Cube012.geometry}
          material={materials.wood_plinth}
          position={[-22.751, -0.818, 2.305]}
          scale={[0.088, 0.394, 6.638]}
        />
        {/* <mesh
          geometry={nodes.BOX_WITH_DJ.geometry}
          material={materials.BOX_WITH_DJ}
          position={[-2.058, 3.288, 3.274]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={7.907}
        /> */}
        <AppartmentHotspot
          type="dancefloor"
          materials={materials.BOX_WITH_DJ}
          position={[-2.058, 3.288, 3.274]}
          rotation={[Math.PI / 2, 0, 0]}
          material-tonedMapped={false}
          scale={7.907}
          geometry={nodes.BOX_WITH_DJ.geometry}
          stats={({ maxPersonsCount, personsCount }) => (
            <AppartmentHotspotStats
              rotation={[Math.PI / -2, 0, 0]}
              scale={0.15}
              maxPersonsCount={maxPersonsCount}
              personsCount={personsCount}
            />
          )}
        />
      </group>
    </group>
  );
};

useGLTF.preload('assets/appartment_v8-transformed.glb');
